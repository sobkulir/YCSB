package mdhim;
import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * Remote Index info  <br>
 * Contains information about a remote index<br>
 * A remote index means that an index can be served by one or more range servers<br>
 * <i>native declaration : mdhim-tng-ycsb/src/indexes.h:1306</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("mdhim") 
public abstract class index_t extends StructObject {
	static {
		BridJ.register();
	}
	@Field(0) 
	public int id() {
		return this.io.getIntField(this, 0);
	}
	@Field(0) 
	public index_t id(int id) {
		this.io.setIntField(this, 0, id);
		return this;
	}
	/** C type : mdhim_store_t* */
	@Field(1) 
	public Pointer<mdhim_store_t > mdhim_store() {
		return this.io.getPointerField(this, 1);
	}
	/** C type : mdhim_store_t* */
	@Field(1) 
	public index_t mdhim_store(Pointer<mdhim_store_t > mdhim_store) {
		this.io.setPointerField(this, 1, mdhim_store);
		return this;
	}
	/** The key type used in the db */
	@Field(2) 
	public int key_type() {
		return this.io.getIntField(this, 2);
	}
	/** The key type used in the db */
	@Field(2) 
	public index_t key_type(int key_type) {
		this.io.setIntField(this, 2, key_type);
		return this;
	}
	/** The database type */
	@Field(3) 
	public int db_type() {
		return this.io.getIntField(this, 3);
	}
	/** The database type */
	@Field(3) 
	public index_t db_type(int db_type) {
		this.io.setIntField(this, 3, db_type);
		return this;
	}
	/**
	 * The type of index <br>
	 * (PRIMARY_INDEX, SECONDARY_INDEX, LOCAL_INDEX)
	 */
	@Field(4) 
	public int type() {
		return this.io.getIntField(this, 4);
	}
	/**
	 * The type of index <br>
	 * (PRIMARY_INDEX, SECONDARY_INDEX, LOCAL_INDEX)
	 */
	@Field(4) 
	public index_t type(int type) {
		this.io.setIntField(this, 4, type);
		return this;
	}
	/** The primary index id if this is a secondary index */
	@Field(5) 
	public int primary_id() {
		return this.io.getIntField(this, 5);
	}
	/** The primary index id if this is a secondary index */
	@Field(5) 
	public index_t primary_id(int primary_id) {
		this.io.setIntField(this, 5, primary_id);
		return this;
	}
	/**
	 * Hash table of the range servers <br>
	 * serving this index.  Key is range server number<br>
	 * C type : rangesrv_info*
	 */
	@Field(6) 
	public Pointer<rangesrv_info > rangesrvs_by_num() {
		return this.io.getPointerField(this, 6);
	}
	/**
	 * Hash table of the range servers <br>
	 * serving this index.  Key is range server number<br>
	 * C type : rangesrv_info*
	 */
	@Field(6) 
	public index_t rangesrvs_by_num(Pointer<rangesrv_info > rangesrvs_by_num) {
		this.io.setPointerField(this, 6, rangesrvs_by_num);
		return this;
	}
	/**
	 * Hash table of the range servers <br>
	 * serving this index.  Key is the rank<br>
	 * C type : rangesrv_info*
	 */
	@Field(7) 
	public Pointer<rangesrv_info > rangesrvs_by_rank() {
		return this.io.getPointerField(this, 7);
	}
	/**
	 * Hash table of the range servers <br>
	 * serving this index.  Key is the rank<br>
	 * C type : rangesrv_info*
	 */
	@Field(7) 
	public index_t rangesrvs_by_rank(Pointer<rangesrv_info > rangesrvs_by_rank) {
		this.io.setPointerField(this, 7, rangesrvs_by_rank);
		return this;
	}
	@Field(8) 
	public int range_server_factor() {
		return this.io.getIntField(this, 8);
	}
	@Field(8) 
	public index_t range_server_factor(int range_server_factor) {
		this.io.setIntField(this, 8, range_server_factor);
		return this;
	}
	@Field(9) 
	public int mdhim_max_recs_per_slice() {
		return this.io.getIntField(this, 9);
	}
	@Field(9) 
	public index_t mdhim_max_recs_per_slice(int mdhim_max_recs_per_slice) {
		this.io.setIntField(this, 9, mdhim_max_recs_per_slice);
		return this;
	}
	/** Conversion Error : MPI_Comm (failed to convert type to Java (undefined type)) */
	@Field(11) 
	public int rangesrv_master() {
		return this.io.getIntField(this, 11);
	}
	@Field(11) 
	public index_t rangesrv_master(int rangesrv_master) {
		this.io.setIntField(this, 11, rangesrv_master);
		return this;
	}
	@Field(12) 
	public int num_rangesrvs() {
		return this.io.getIntField(this, 12);
	}
	@Field(12) 
	public index_t num_rangesrvs(int num_rangesrvs) {
		this.io.setIntField(this, 12, num_rangesrvs);
		return this;
	}
	/** C type : rangesrv_info */
	@Field(13) 
	public rangesrv_info myinfo() {
		return this.io.getNativeObjectField(this, 13);
	}
	/** C type : rangesrv_info */
	@Field(13) 
	public index_t myinfo(rangesrv_info myinfo) {
		this.io.setNativeObjectField(this, 13, myinfo);
		return this;
	}
	/** C type : mdhim_stat* */
	@Field(14) 
	public Pointer<mdhim_stat > stats() {
		return this.io.getPointerField(this, 14);
	}
	/** C type : mdhim_stat* */
	@Field(14) 
	public index_t stats(Pointer<mdhim_stat > stats) {
		this.io.setPointerField(this, 14, stats);
		return this;
	}
	/** Conversion Error : UT_hash_handle (failed to convert type to Java (undefined type)) */
}
